from django.shortcuts import render
from rest_framework import generics
from rest_framework import status
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import BasePermission, IsAuthenticated
from rest_condition import Or

from .models import Flagging
from .serializers import FlaggingSerializer
from UserInfos.models import UserInfo
from UserInfos.serializers import UserInfoSerializer

class FlaggingEndpoints( APIView ):
	#get all flags on mentee
	def get( self, request, mentee_id ):
		try:
			userQuery = UserInfo.objects.get( user_id=mentee_id )
			userSerializer = UserInfoSerializer( userQuery )
			try:
				query = Flagging.objects.filter( mentee_id=mentee_id)
				serializer = FlaggingSerializer( query )
				return Response( serializer.data )
			except Flagging.DoesNotExist:
				return Response( {"error": "No Flags"} , status=status.HTTP_404_NOT_FOUND )
		except UserInfo.DoesNotExist:
			return Response( {"error": "User with this mentee id does not exist"}, status=status.HTTP_404_NOT_FOUND )
	#create a new flag on a user
	def post( self, request ):
		try:
			mentee_id = request.data["mentee_id"]
			mentor_id = request.data[

		except KeyError:
			return Response({"error": "Wrong Json Format"}, status=status.HTTP_400_BAD_REQUEST)
